// <auto-generated />
using System;
using Escambo.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Escambo.Infra.Migrations
{
    [DbContext(typeof(EscamboContext))]
    [Migration("20240228000523_initialMigrationss")]
    partial class initialMigrationss
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Escambo.Dommain.Model.Anuncio", b =>
                {
                    b.Property<int>("AnuncioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Categoria")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal?>("Creditos")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTimeOffset>("Deleted")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<string>("NomeServico")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tipo")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("Updated")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("AnuncioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Anuncios", (string)null);
                });

            modelBuilder.Entity("Escambo.Dommain.Model.Avaliacao", b =>
                {
                    b.Property<int>("AvaliacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset>("Deleted")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("Estelas")
                        .HasColumnType("int");

                    b.Property<string>("Mensagem")
                        .HasColumnType("longtext");

                    b.Property<int?>("PrestacaoServicoId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Updated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("AvaliacaoId");

                    b.HasIndex("PrestacaoServicoId");

                    b.ToTable("Avaliacoes", (string)null);
                });

            modelBuilder.Entity("Escambo.Dommain.Model.Conversa", b =>
                {
                    b.Property<int>("ConversaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataHoraFim")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataHoraInicio")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset>("Deleted")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset>("Updated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ConversaId");

                    b.ToTable("Conversas", (string)null);
                });

            modelBuilder.Entity("Escambo.Dommain.Model.ConversasHasUsuarios", b =>
                {
                    b.Property<int>("ConversasIdMensagem")
                        .HasColumnType("int");

                    b.Property<int>("UsuariosIdUsuario")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset>("Deleted")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset>("Updated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("ConversasIdMensagem", "UsuariosIdUsuario");

                    b.HasIndex("UsuariosIdUsuario");

                    b.ToTable("ConversasHasUsuarios");
                });

            modelBuilder.Entity("Escambo.Dommain.Model.Mensagem", b =>
                {
                    b.Property<int>("MensagemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ConversaId")
                        .HasColumnType("int");

                    b.Property<int>("ConversasIdMensagem")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataEnvio")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset>("Deleted")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("HoraEnvio")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Texto")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("Updated")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("UsuariosIdUsuario")
                        .HasColumnType("int");

                    b.HasKey("MensagemId");

                    b.HasIndex("ConversasIdMensagem");

                    b.HasIndex("UsuariosIdUsuario");

                    b.ToTable("Mensagens", (string)null);
                });

            modelBuilder.Entity("Escambo.Dommain.Model.PrestacaoServico", b =>
                {
                    b.Property<int>("PrestacaoServicoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("AnuncioId")
                        .HasColumnType("int");

                    b.Property<int>("AnuncioIdAnuncio")
                        .HasColumnType("int");

                    b.Property<string>("Categoria")
                        .HasColumnType("longtext");

                    b.Property<int>("ContratanteId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Credito")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset>("Deleted")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descrição")
                        .HasColumnType("longtext");

                    b.Property<string>("Duração")
                        .HasColumnType("longtext");

                    b.Property<int>("PrestadorId")
                        .HasColumnType("int");

                    b.Property<int>("ServiçoId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("Updated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("PrestacaoServicoId");

                    b.HasIndex("AnuncioId");

                    b.HasIndex("ContratanteId");

                    b.HasIndex("PrestadorId");

                    b.ToTable("PrestacaoServicos", (string)null);
                });

            modelBuilder.Entity("Escambo.Dommain.Model.PrestacaoServicoHasAvaliacoes", b =>
                {
                    b.Property<int>("PrestacaoServicoIdPrestacaoServico")
                        .HasColumnType("int");

                    b.Property<int>("AvaliacoesIdAvaliacoes")
                        .HasColumnType("int");

                    b.Property<int?>("AvaliacoesAvaliacaoId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset>("Deleted")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset>("Updated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("PrestacaoServicoIdPrestacaoServico", "AvaliacoesIdAvaliacoes");

                    b.HasIndex("AvaliacoesAvaliacaoId");

                    b.ToTable("PrestacaoServicoHasAvaliacoes");
                });

            modelBuilder.Entity("Escambo.Dommain.Model.PrestacaoServicoHasUsuarios", b =>
                {
                    b.Property<int>("PrestacaoServicoIdPrestacaoServico")
                        .HasColumnType("int");

                    b.Property<int>("UsuariosIdUsuario")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTimeOffset>("Deleted")
                        .HasColumnType("datetime(6)");

                    b.Property<bool?>("IsPrestador")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTimeOffset>("Updated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("PrestacaoServicoIdPrestacaoServico", "UsuariosIdUsuario");

                    b.HasIndex("UsuariosIdUsuario");

                    b.ToTable("PrestacaoServicoHasUsuarios");
                });

            modelBuilder.Entity("Escambo.Dommain.Model.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CPF")
                        .HasColumnType("longtext");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Credito")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateTimeOffset>("Deleted")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("Endereço")
                        .HasColumnType("longtext");

                    b.Property<string>("LinkLinkedln")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Nascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .HasColumnType("longtext");

                    b.Property<string>("RG")
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .HasColumnType("longtext");

                    b.Property<string>("Sobre")
                        .HasColumnType("longtext");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Updated")
                        .HasColumnType("datetime(6)");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios", (string)null);
                });

            modelBuilder.Entity("Escambo.Dommain.Model.Anuncio", b =>
                {
                    b.HasOne("Escambo.Dommain.Model.Usuario", "Usuario")
                        .WithMany("Anuncios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Escambo.Dommain.Model.Avaliacao", b =>
                {
                    b.HasOne("Escambo.Dommain.Model.PrestacaoServico", null)
                        .WithMany("Avaliacoes")
                        .HasForeignKey("PrestacaoServicoId");
                });

            modelBuilder.Entity("Escambo.Dommain.Model.ConversasHasUsuarios", b =>
                {
                    b.HasOne("Escambo.Dommain.Model.Conversa", "Conversa")
                        .WithMany("ConversasHasUsuarios")
                        .HasForeignKey("ConversasIdMensagem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Escambo.Dommain.Model.Usuario", "Usuario")
                        .WithMany("ConversasHasUsuarios")
                        .HasForeignKey("UsuariosIdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conversa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Escambo.Dommain.Model.Mensagem", b =>
                {
                    b.HasOne("Escambo.Dommain.Model.Conversa", "Conversa")
                        .WithMany("Mensagens")
                        .HasForeignKey("ConversasIdMensagem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Escambo.Dommain.Model.Usuario", "Usuario")
                        .WithMany("Mensagens")
                        .HasForeignKey("UsuariosIdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Conversa");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Escambo.Dommain.Model.PrestacaoServico", b =>
                {
                    b.HasOne("Escambo.Dommain.Model.Anuncio", "Anuncio")
                        .WithMany("PrestacaoServicos")
                        .HasForeignKey("AnuncioId");

                    b.HasOne("Escambo.Dommain.Model.Usuario", "Contratante")
                        .WithMany()
                        .HasForeignKey("ContratanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Escambo.Dommain.Model.Usuario", "Prestador")
                        .WithMany()
                        .HasForeignKey("PrestadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anuncio");

                    b.Navigation("Contratante");

                    b.Navigation("Prestador");
                });

            modelBuilder.Entity("Escambo.Dommain.Model.PrestacaoServicoHasAvaliacoes", b =>
                {
                    b.HasOne("Escambo.Dommain.Model.Avaliacao", "Avaliacoes")
                        .WithMany("PrestacaoServicoHasAvaliacoes")
                        .HasForeignKey("AvaliacoesAvaliacaoId");

                    b.HasOne("Escambo.Dommain.Model.PrestacaoServico", "PrestacaoServico")
                        .WithMany("PrestacaoServicoHasAvaliacoes")
                        .HasForeignKey("PrestacaoServicoIdPrestacaoServico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avaliacoes");

                    b.Navigation("PrestacaoServico");
                });

            modelBuilder.Entity("Escambo.Dommain.Model.PrestacaoServicoHasUsuarios", b =>
                {
                    b.HasOne("Escambo.Dommain.Model.PrestacaoServico", "PrestacaoServico")
                        .WithMany("PrestacaoServicoHasUsuarios")
                        .HasForeignKey("PrestacaoServicoIdPrestacaoServico")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Escambo.Dommain.Model.Usuario", "Usuario")
                        .WithMany("PrestacaoServicoHasUsuarios")
                        .HasForeignKey("UsuariosIdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PrestacaoServico");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Escambo.Dommain.Model.Anuncio", b =>
                {
                    b.Navigation("PrestacaoServicos");
                });

            modelBuilder.Entity("Escambo.Dommain.Model.Avaliacao", b =>
                {
                    b.Navigation("PrestacaoServicoHasAvaliacoes");
                });

            modelBuilder.Entity("Escambo.Dommain.Model.Conversa", b =>
                {
                    b.Navigation("ConversasHasUsuarios");

                    b.Navigation("Mensagens");
                });

            modelBuilder.Entity("Escambo.Dommain.Model.PrestacaoServico", b =>
                {
                    b.Navigation("Avaliacoes");

                    b.Navigation("PrestacaoServicoHasAvaliacoes");

                    b.Navigation("PrestacaoServicoHasUsuarios");
                });

            modelBuilder.Entity("Escambo.Dommain.Model.Usuario", b =>
                {
                    b.Navigation("Anuncios");

                    b.Navigation("ConversasHasUsuarios");

                    b.Navigation("Mensagens");

                    b.Navigation("PrestacaoServicoHasUsuarios");
                });
#pragma warning restore 612, 618
        }
    }
}
